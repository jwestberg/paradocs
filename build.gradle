apply plugin: 'java'
apply plugin: 'groovy'

dependencies {
	compile 'org.springframework:spring-core:4.0.0.RELEASE'
	compile 'org.codehaus.groovy:groovy-all:2.2.1'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'com.google.guava:guava:15.0'
    compile "org.antlr:antlr4:4.1"
    compile 'joda-time:joda-time:1.6.1'

    testCompile 'junit:junit:4.11'
}

sourceSets{
    main{
        java{
            srcDir 'src/main/java'
            srcDir 'src/generated/java'
        }
        groovy {
            srcDir 'src/main/groovy'
        }
    }
    test{
        java{
            srcDir 'src/test/groovy'
            srcDir 'src/test/resources'
        }
    }
}

class Antlr4Task extends SourceTask{

    File dir
    String pkg = "com.jwestberg.paradoxreader"

    @OutputDirectory
    public File getDestinationDir() {
        dir
    }

    @TaskAction
    def generate(){
        source.each{
            File file ->
                new org.antlr.v4.Tool(["-o", dir.absolutePath, "-package",
                        pkg, file.absolutePath] as String[]).processGrammarsOnCommandLine()
        }
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.antlr:antlr4:4.1"
    }
}


task antlr4(type: Antlr4Task){
    source file('src/main/antlr4/com/jwestberg/paradoxreader/Paradox.g4')
    dir = file('src/generated/java/com/jwestberg/paradoxreader')
}


compileGroovy {
    dependsOn antlr4
}

repositories {
    mavenCentral()
}
